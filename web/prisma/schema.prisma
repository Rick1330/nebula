// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
	provider = "prisma-client-js"
	output   = "../app/generated/prisma"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
	id        String   @id @default(cuid())
	email     String   @unique
	name      String?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	memberships WorkspaceMember[]
	messages    Message[]
}

model Workspace {
	id         String            @id @default(cuid())
	name       String
	createdAt  DateTime          @default(now())
	updatedAt  DateTime          @updatedAt

	members    WorkspaceMember[]
	channels   Channel[]
}

model WorkspaceMember {
	id          String    @id @default(cuid())
	userId      String
	workspaceId String
	role        String    @default("member")
	createdAt   DateTime  @default(now())

	user      User      @relation(fields: [userId], references: [id])
	workspace Workspace @relation(fields: [workspaceId], references: [id])

	@@unique([userId, workspaceId])
}

enum ChannelType {
	TEXT
	VOICE
}

model Channel {
	id           String      @id @default(cuid())
	workspaceId  String
	name         String
	type         ChannelType @default(TEXT)
	createdAt    DateTime    @default(now())

	workspace Workspace @relation(fields: [workspaceId], references: [id])
	messages  Message[]

	@@index([workspaceId])
}

model Message {
	id        String   @id @default(cuid())
	channelId String
	userId    String
	content   String
	createdAt DateTime @default(now())

	channel Channel @relation(fields: [channelId], references: [id])
	user    User    @relation(fields: [userId], references: [id])

	@@index([channelId, createdAt])
}
